{"version":3,"sources":["assets/logo.png","actions/types.js","components/header/index.js","components/headline/index.js","components/button/index.js","components/listItem/index.js","App.js","actions/index.js","reducers/index.js","reducers/posts/reducer.js","createStore.js","index.js"],"names":["module","exports","types","Header","props","data-test","className","src","Logo","alt","Headline","this","header","desc","Component","SharedButton","emitEvent","buttonText","onClick","onSubmit","ListItem","title","tempArr","fName","lName","email","age","onlineStatus","App","fetchPosts","posts","buttonConfig","length","map","post","index","postConfig","body","key","React","connect","state","dispatch","a","axios","get","then","res","type","payload","data","combineReducers","action","middlewares","ReduxThunk","store","applyMiddleware","createStore","createStoreWithMiddleware","reducers","ReactDOM","render","document","getElementById"],"mappings":"oHAAAA,EAAOC,QAAU,IAA0B,kC,qNCA9BC,EACE,W,0CCeAC,EAZA,SAAAC,GACX,OACI,4BAAQC,YAAU,mBACd,yBAAKC,UAAU,QACX,yBAAKA,UAAU,QACX,yBAAKD,YAAU,UAAUE,IAAKC,IAAMC,IAAI,aC4B7CC,E,uKA7BD,IAAD,EAEkBC,KAAKP,MAArBQ,EAFF,EAEEA,OAAQC,EAFV,EAEUA,KAEf,OAAID,EAKA,yBAAKP,YAAU,qBACX,wBAAIA,YAAU,UAAUO,GACxB,uBAAGP,YAAU,QAAQQ,IANlB,S,GAVIC,aCsBRC,E,yKApBJJ,KAAKP,MAAMY,WACVL,KAAKP,MAAMY,c,+BAGT,IAAD,OACGC,EAAeN,KAAKP,MAApBa,WAER,OACI,4BAAQC,QAAS,kBAAM,EAAKC,YAAYd,YAAU,mBAC5CY,O,GAXSH,aCuBZM,E,uKAtBD,IAAD,EAEmBT,KAAKP,MAArBiB,EAFH,EAEGA,MAAOR,EAFV,EAEUA,KAEf,OAAIQ,EAKA,yBAAKhB,YAAU,qBACX,wBAAIA,YAAU,SAAd,IAAwBgB,EAAxB,KACA,uBAAGhB,YAAU,QAAb,IAAsBQ,EAAtB,MANG,S,GANIC,aCQjBQ,G,MAAU,CAAC,CACfC,MAAO,SACPC,MAAO,aACPC,MAAO,mBACPC,IAAK,GACLC,cAAc,KAGVC,E,4MACFC,WAAa,WACT,EAAKzB,MAAMyB,c,uDAGL,IACEC,EAAUnB,KAAKP,MAAf0B,MAEFC,EAAe,CACjBd,WAAY,YACZD,UAAWL,KAAKkB,YAGpB,OACI,yBAAKvB,UAAU,OACb,kBAAC,EAAD,MACA,6BAASA,UAAU,QACjB,kBAAC,EAAD,CAAUM,OAAO,OAAOC,KAAK,mCAAmCS,QAASA,IACzE,kBAAC,EAAiBS,GAEjBD,EAAME,OAAS,GAEZ,6BACKF,EAAMG,KAAI,SAACC,EAAMC,GAAW,IAEnBC,EAAa,CACff,MAFoBa,EAAhBb,MAGJR,KAHoBqB,EAATG,MAMf,OACI,kBAAC,EAAD,eAAUC,IAAKH,GAAWC,c,GA/BxCG,IAAMzB,WAiDT0B,eANS,SAACC,GACrB,MAAO,CACHX,MAAOW,EAAMX,SAImB,CAAED,WCjEf,yDAAM,WAAOa,GAAP,SAAAC,EAAA,sEACvBC,IAAMC,IAAI,wDACXC,MAAK,SAAAC,GACFL,EAAS,CACLM,KAAM9C,EACN+C,QAASF,EAAIG,UALI,2CAAN,wDDiEZV,CAAyCZ,G,eEjEzCuB,cAAgB,CAC3BrB,MCHW,WAAuB,IAAtBW,EAAqB,uDAAf,GAAIW,EAAW,uCACjC,OAAOA,EAAOJ,MACV,KAAK9C,EACD,OAAOkD,EAAOH,QAClB,QACI,OAAOR,MCFNY,EAAc,CAACC,KAIfC,EAF4BC,IAAe,WAAf,EAAmBH,EAAnBG,CAAgCC,IAEpDC,CAA0BC,GCF/CC,IAASC,OACL,kBAAC,IAAD,CAAUN,MAAOA,GACb,kBAAC,EAAD,OAEJO,SAASC,eAAe,W","file":"static/js/main.d27bb82e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.123ba1a1.png\";","export const types = {\n    GET_POSTS: 'getPosts'\n}","import React from 'react';\nimport './styles.scss';\nimport Logo from '../../assets/logo.png';\n\nconst Header = props => {\n    return (\n        <header data-test=\"headerComponent\">\n            <div className=\"wrap\">\n                <div className=\"logo\">\n                    <img data-test=\"logoIMG\" src={Logo} alt=\"Logo\" />\n                </div>\n            </div>\n        </header>\n    )\n};\n\nexport default Header;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Headline extends Component {\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    render() {\n\n        const {header, desc} = this.props;\n\n        if(!header) {\n            return null;\n        }\n\n        return (\n            <div data-test=\"headlineComponent\">\n                <h1 data-test=\"header\">{header}</h1>\n                <p data-test=\"desc\">{desc}</p>\n            </div>\n        )\n    }\n};\n\nHeadline.propTypes = {\n    header: PropTypes.string,\n    desc: PropTypes.string,\n    tempArr: PropTypes.arrayOf(PropTypes.shape({\n        fName: PropTypes.string,\n        lName: PropTypes.string,\n        email: PropTypes.string,\n        age: PropTypes.number,\n        onlineStatus: PropTypes.bool\n    }))\n}\n\nexport default Headline;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass SharedButton extends Component {\n    onSubmit() {\n        if(this.props.emitEvent) {\n            this.props.emitEvent();\n        }\n    }\n    render() {\n        const { buttonText } = this.props;\n\n        return (\n            <button onClick={() => this.onSubmit()} data-test=\"buttonComponent\">\n                { buttonText }\n            </button>\n        );\n    }\n}\n\nSharedButton.propTypes = {\n    buttonText: PropTypes.string,\n    emitEvent: PropTypes.func\n};\n\nexport default SharedButton;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ListItem extends Component {\n    render() {\n\n        const { title, desc } = this.props;\n\n        if(!title) {\n            return null;\n        }\n\n        return (\n            <div data-test=\"listItemComponent\">\n                <h2 data-test=\"title\"> {title} </h2>\n                <p data-test=\"desc\"> {desc} </p>\n            </div>\n        );\n    }\n}\n\nListItem.propTypes = {\n    title: PropTypes.string,\n    desc: PropTypes.string\n}\n\nexport default ListItem;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPosts } from './actions';\n\nimport Header from './components/header';\nimport Headline from './components/headline';\nimport SharedButton from './components/button';\nimport ListItem from './components/listItem';\n\nimport './App.scss';\n\nconst tempArr = [{\n  fName: 'Burhan',\n  lName: 'Mullamitha',\n  email: 'burhan@gmail.com',\n  age: 22,\n  onlineStatus: true\n}]\n\nclass App extends React.Component {\n    fetchPosts = () => {\n        this.props.fetchPosts();\n    }\n    \n    render() {\n        const { posts } = this.props;\n        \n        const buttonConfig = {\n            buttonText: 'Get Posts',\n            emitEvent: this.fetchPosts\n        }\n        \n        return (\n            <div className=\"App\">\n              <Header />\n              <section className=\"main\">\n                <Headline header=\"Post\" desc=\"Click the button to render posts\" tempArr={tempArr} />\n                <SharedButton {...buttonConfig} />\n                \n                {posts.length > 0 && \n                    \n                    <div>\n                        {posts.map((post, index) => {\n                            const { title, body } = post;\n                            const postConfig = {\n                                title,\n                                desc: body\n                            };\n                            \n                            return (\n                                <ListItem key={index} {...postConfig} />\n                            )\n                        })}\n                    </div>\n                    \n                }\n              </section>\n            </div>\n          );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        posts: state.posts\n    };\n}\n\nexport default connect(mapStateToProps, { fetchPosts })(App);\n","import { types } from './types';\nimport axios from 'axios';\n\n export const fetchPosts = () => async (dispatch) => {\n    await axios.get('https://jsonplaceholder.typicode.com/posts?_limit=10')\n        .then(res => {\n            dispatch({\n                type: types.GET_POSTS,\n                payload: res.data                \n            });\n        });\n };","import { combineReducers } from 'redux';\nimport postsReducer from './posts/reducer';\n\nexport default combineReducers({\n    posts: postsReducer\n})","import { types } from '../../actions/types';\nexport default (state=[], action) => {\n    switch(action.type) {\n        case types.GET_POSTS: \n            return action.payload;\n        default:\n            return state;\n    }\n};","import { createStore, applyMiddleware } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport reducers from './reducers';\n\nexport const middlewares = [ReduxThunk];\n\nexport const createStoreWithMiddleware = applyMiddleware(...middlewares)(createStore);\n\nexport const store = createStoreWithMiddleware(reducers);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './createStore';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}